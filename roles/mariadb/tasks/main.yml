---
# tasks file for roles/mariadb
- name: Install all requirement packeges
  yum:
   name: "{{ item }}"
   state: latest
  with_items:
   - "{{ packages }}"
- name: start mariad server
  service:
   name: mariadb
   state: started
   enabled: yes
- name: Configure mariadb root
  mysql_user:
   name: root
   host: "{{ item }}"
   password: "{{ new_root_passwd }}"
   check_implicit_admin: yes
   login_user: "{{ mysql_user }}"
   login_password: "{{ mysql_old_root_password }}"
   state: present
  with_items:
   - "{{ hosts }}"
- name: Copy the template of galera.cnf
  template:
   src: galera.cnf.j2
   dest: /etc/my.cnf.d/galera.cnf
   owner: root
   group: root
   mode: "0644"
- name: Configure firewall for autorise ports
  firewalld:
   zone: public
   port: "{{ item }}"
   permanent: yes
   state: enabled
  with_items:
   - "3306/tcp"
   - "4567/tcp"
   - "4568/tcp"
   - "4444/tcp"
   - "4567/udp"
- name: Configure firewall for autorise service mysql
  firewalld:
   zone: public
   service: mysql
   permanent: yes
   state: enabled
- name: reload firewalld
  command: firewall-cmd --reload
- name: configure selinux for tcp/udp ports
  command: semanage port -a -t mysqld_port_t -p tcp 4567
  command: semanage port -a -t mysqld_port_t -p udp 4567
  command: semanage port -a -t mysqld_port_t -p tcp 4568
 # command: semanage port -a -t mysqld_port_t -p tcp 4444
- name: Set mysald_t in permissive mode
  command: semanage permissive -a mysqld_t
  notify: stop mariadb server
- name: bootstrap the cluster to generate inter-node communication
  command: galera_new_cluster
  when: inventory_hostname == "{{ hostname }}"
#- name: Create and Enable the SELinux policy
#  command: grep mysql /var/log/audit/audit.log | sudo audit2allow -M Galera
#  command: semodule -i Galera.pp
#- name: disable permissive mode from mysqld_t
#  command: semanage permissive -d mysqld_t
#  notify: stop mariadb server
- name: stop mariadb server
  service:
   name: mariadb
   state: stopped
- name: Bring up First node
  command: galera_new_cluster
  when: inventory_hostname == "{{ hostname }}"
  notify: start mariadb server
